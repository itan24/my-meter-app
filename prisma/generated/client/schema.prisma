generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  name          String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  profiles      Profile[]
  sessions      Session[]
}

model Profile {
  id             Int       @id @default(autoincrement())
  userId         Int
  tenantName     String
  meterNumber    String
  initialReading Int?
  user           User      @relation(fields: [userId], references: [id])
  readings       Reading[]
}

model Reading {
  id          Int      @id @default(autoincrement())
  profileId   Int
  date        DateTime
  previous    Int
  current     Int
  consumption Int
  profile     Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
